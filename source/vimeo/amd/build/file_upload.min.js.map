{"version":3,"file":"file_upload.min.js","sources":["../src/file_upload.js"],"sourcesContent":["import Ajax from 'core/ajax';\nimport Config from 'core/config';\nimport Log from 'core/log';\nimport Notification from 'core/notification';\n\nconst upload = async(resource) => {\n    const file = document.querySelector('input[name=\"videofile\"]').files[0];\n    const url = new URL(Config.wwwroot + '/admin/tool/mediatime/index.php');\n    let offset = 0;\n\n    url.searchParams.set('id', resource.id);\n\n    do {\n        const request = new Request(resource.uploadurl, {\n            body: file.slice(Number(offset), Number(offset) + 8388608),\n            headers: {\n                'Tus-Resumable': '1.0.0',\n                'Upload-Offset': String(offset),\n                'Content-Type': 'application/offset+octet-stream'\n            },\n            method: 'PATCH'\n        });\n        const response = await fetch(request).catch(e => {\n            Log.debug(e);\n            return new Promise(resolve => setTimeout(resolve, 1000));\n        });\n        if (response && response.ok) {\n            offset = response.headers.get('Upload-Offset');\n        }\n        document.querySelector('.progress').style.width = ( offset / file.size * 100) + '%';\n        Log.debug(offset);\n    } while (offset < file.size);\n    window.location.href = url;\n};\n\nexport default {\n    init: function() {\n        document.body.removeEventListener('click', this.handleClick);\n        document.body.addEventListener('click', this.handleClick);\n    },\n\n    handleClick: function(e) {\n        const button = e.target.closest('button[name=\"upload\"]');\n        if (button) {\n            const file = document.querySelector('input[name=\"videofile\"]').files[0];\n            e.preventDefault();\n            Ajax.call([{\n                args: {\n                    filesize: Number(file.size),\n                    description: document.querySelector('input[name=\"description\"]').value,\n                    name: document.querySelector('input[name=\"name\"]').value,\n                    tags: document.querySelector('input[name=\"tags\"]').value,\n                    title: document.querySelector('input[name=\"title\"]').value\n                },\n                contextid: 1,\n                done: upload,\n                fail: Notification.exception,\n                methodname: 'mediatimesrc_vimeo_create_token'\n            }]);\n            Log.debug(file.size);\n        }\n    }\n};\n"],"names":["upload","async","file","document","querySelector","files","url","URL","Config","wwwroot","offset","searchParams","set","resource","id","request","Request","uploadurl","body","slice","Number","headers","String","method","response","fetch","catch","e","debug","Promise","resolve","setTimeout","ok","get","style","width","size","window","location","href","init","removeEventListener","this","handleClick","addEventListener","target","closest","preventDefault","call","args","filesize","description","value","name","tags","title","contextid","done","fail","Notification","exception","methodname"],"mappings":"4eAKMA,OAASC,MAAAA,iBACLC,KAAOC,SAASC,cAAc,2BAA2BC,MAAM,GAC/DC,IAAM,IAAIC,IAAIC,gBAAOC,QAAU,uCACjCC,OAAS,EAEbJ,IAAIK,aAAaC,IAAI,KAAMC,SAASC,MAEjC,OACOC,QAAU,IAAIC,QAAQH,SAASI,UAAW,CAC5CC,KAAMhB,KAAKiB,MAAMC,OAAOV,QAASU,OAAOV,QAAU,SAClDW,QAAS,iBACY,wBACAC,OAAOZ,uBACR,mCAEpBa,OAAQ,UAENC,eAAiBC,MAAMV,SAASW,OAAMC,iBACpCC,MAAMD,GACH,IAAIE,SAAQC,SAAWC,WAAWD,QAAS,UAElDN,UAAYA,SAASQ,KACrBtB,OAASc,SAASH,QAAQY,IAAI,kBAElC9B,SAASC,cAAc,aAAa8B,MAAMC,MAAUzB,OAASR,KAAKkC,KAAO,IAAO,iBAC5ER,MAAMlB,cACLA,OAASR,KAAKkC,MACvBC,OAAOC,SAASC,KAAOjC,kBAGZ,CACXkC,KAAM,WACFrC,SAASe,KAAKuB,oBAAoB,QAASC,KAAKC,aAChDxC,SAASe,KAAK0B,iBAAiB,QAASF,KAAKC,cAGjDA,YAAa,SAAShB,MACHA,EAAEkB,OAAOC,QAAQ,yBACpB,OACF5C,KAAOC,SAASC,cAAc,2BAA2BC,MAAM,GACrEsB,EAAEoB,+BACGC,KAAK,CAAC,CACPC,KAAM,CACFC,SAAU9B,OAAOlB,KAAKkC,MACtBe,YAAahD,SAASC,cAAc,6BAA6BgD,MACjEC,KAAMlD,SAASC,cAAc,sBAAsBgD,MACnDE,KAAMnD,SAASC,cAAc,sBAAsBgD,MACnDG,MAAOpD,SAASC,cAAc,uBAAuBgD,OAEzDI,UAAW,EACXC,KAAMzD,OACN0D,KAAMC,sBAAaC,UACnBC,WAAY,kDAEZjC,MAAM1B,KAAKkC"}