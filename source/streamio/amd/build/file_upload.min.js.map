{"version":3,"sources":["../src/file_upload.js"],"names":["define","Log","tus","FileUpload","token","upload","options","endpoint","metadata","uploadtoken","onError","debug","onProgress","bytesUploaded","bytesTotal","document","querySelectorAll","forEach","indicator","style","width","onSuccess","getElementById","submit","url","addEvents","prototype","body","removeEventListener","handleClick","bind","addEventListener","e","button","target","closest","file","querySelector","files","preventDefault","filename","name","filetype","type","Upload","start","init","fileupload","Promise","resolve"],"mappings":"AASAA,OAAM,qCAAC,CAAC,UAAD,CAAa,2BAAb,CAAD,CAA4C,SAASC,CAAT,CAAcC,CAAd,CAAmB,CAQjE,GAAIC,CAAAA,CAAU,CAAG,SAASC,CAAT,CAAgB,CAC7B,KAAKC,MAAL,CAAc,EAAd,CACA,KAAKC,OAAL,CAAe,CACXC,QAAQ,CAAE,wCADC,CAEXC,QAAQ,CAAE,CAACC,WAAW,CAAEL,CAAd,CAFC,CAGXM,OAAO,CAAET,CAAG,CAACU,KAHF,CAIXC,UAAU,CAAE,oBAASC,CAAT,CAAwBC,CAAxB,CAAoC,CAC5CC,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCC,OAAvC,CAA+C,SAACC,CAAD,CAAe,CAC1DA,CAAS,CAACC,KAAV,CAAgBC,KAAhB,CAAsD,GAA7B,EAAAP,CAAa,CAAGC,CAAhB,CAAD,CAAqC,GAChE,CAFD,CAGH,CARU,CASXO,SAAS,CAAE,oBAAW,CAClBN,QAAQ,CAACO,cAAT,CAAwB,sBAAxB,EAAgDC,MAAhD,GACAtB,CAAG,CAACU,KAAJ,CAAU,KAAKN,MAAL,CAAYmB,GAAtB,CACH,CAZU,CAAf,CAeA,KAAKC,SAAL,EACH,CAlBD,CAoBAtB,CAAU,CAACuB,SAAX,CAAuB,CAEnBpB,OAAO,CAAE,EAFU,CAInBD,MAAM,CAAE,EAJW,CASnBoB,SAAS,CAAE,oBAAW,CAClBV,QAAQ,CAACY,IAAT,CAAcC,mBAAd,CAAkC,OAAlC,CAA2C,KAAKC,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAA3C,EACAf,QAAQ,CAACY,IAAT,CAAcI,gBAAd,CAA+B,OAA/B,CAAwC,KAAKF,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAxC,CACH,CAZkB,CAcnBD,WAAW,CAAE,qBAASG,CAAT,CAAY,CACrB,GAAMC,CAAAA,CAAM,CAAGD,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB,yBAAjB,CAAf,CACA,GAAIF,CAAJ,CAAY,CACR,GAAMG,CAAAA,CAAI,CAAGrB,QAAQ,CAACsB,aAAT,CAAuB,8BAAvB,EAAqDC,KAArD,CAA2D,CAA3D,CAAb,CACAN,CAAC,CAACO,cAAF,GAEA,GAAIH,CAAJ,CAAU,CACN,KAAK9B,OAAL,CAAaE,QAAb,CAAsBgC,QAAtB,CAAiCJ,CAAI,CAACK,IAAtC,CACA,KAAKnC,OAAL,CAAaE,QAAb,CAAsBkC,QAAtB,CAAiCN,CAAI,CAACO,IAAtC,CACA1C,CAAG,CAACU,KAAJ,CAAU,KAAKL,OAAf,EACAL,CAAG,CAACU,KAAJ,CAAUT,CAAV,EAEA,KAAKG,MAAL,CAAc,GAAIH,CAAAA,CAAG,CAAC0C,MAAR,CAAeR,CAAf,CAAqB,KAAK9B,OAA1B,CAAd,CACA,KAAKD,MAAL,CAAYwC,KAAZ,EACH,CACJ,CACJ,CA9BkB,CAAvB,CAiCA,MAAO,CAOHC,IAAI,CAAE,cAAS1C,CAAT,CAAgB,CAClB,GAAI2C,CAAAA,CAAU,CAAG,GAAI5C,CAAAA,CAAJ,CAAeC,CAAf,CAAjB,CAEA,MAAO4C,CAAAA,OAAO,CAACC,OAAR,CAAgBF,CAAhB,CACV,CAXE,CAaV,CA1EK,CAAN","sourcesContent":["/*\n * Upload video file to Streamio\n *\n * @package    tool_mediatime\n * @subpackage mediatimesrc_streamio\n * @module     mediatimesrc_streamio/file_upload\n * @copyright  2024 bdecent gmbh <https://bdecent.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/log', 'mediatimesrc_streamio/tus'], function(Log, tus) {\n\n    /**\n     * Initialises FileUpload\n     *\n     * @class\n     * @param {string} token\n     */\n    var FileUpload = function(token) {\n        this.upload = {};\n        this.options = {\n            endpoint: 'https://streamio.com/api/v1/videos/tus',\n            metadata: {uploadtoken: token},\n            onError: Log.debug,\n            onProgress: function(bytesUploaded, bytesTotal) {\n                document.querySelectorAll('.progress').forEach((indicator) => {\n                    indicator.style.width = (bytesUploaded / bytesTotal * 100) + '%';\n                });\n            },\n            onSuccess: function() {\n                document.getElementById('upload_resource_form').submit();\n                Log.debug(this.upload.url);\n            }\n        };\n\n        this.addEvents();\n    };\n\n    FileUpload.prototype = {\n        /** @type {Object} */\n        options: {},\n        /** @type {Object} */\n        upload: {},\n\n        /**\n         * Adds events to the current FileUpload\n         */\n        addEvents: function() {\n            document.body.removeEventListener('click', this.handleClick.bind(this));\n            document.body.addEventListener('click', this.handleClick.bind(this));\n        },\n\n        handleClick: function(e) {\n            const button = e.target.closest('button[name=\"upload\"]');\n            if (button) {\n                const file = document.querySelector('input[name=\"streamiofile\"]').files[0];\n                e.preventDefault();\n\n                if (file) {\n                    this.options.metadata.filename = file.name;\n                    this.options.metadata.filetype = file.type;\n                    Log.debug(this.options);\n                    Log.debug(tus);\n\n                    this.upload = new tus.Upload(file, this.options);\n                    this.upload.start();\n                }\n            }\n        }\n    };\n\n    return {\n        /**\n         * Initialises the component\n         *\n         * @param {string} token\n         * @returns {Promise} resolved once complete\n         */\n        init: function(token) {\n            var fileupload = new FileUpload(token);\n\n            return Promise.resolve(fileupload);\n        }\n    };\n});\n"],"file":"file_upload.min.js"}